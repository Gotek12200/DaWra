---
title: "Supervised learning competition"
author: 
  - Osaro Orebor 1168827
  - Máté Csikós-Nagy 4395565
  - Author Three
date: 1010-2025 12:00 AM
format:
  html:
    toc: true
    self-contained: true
    code-fold: true
    df-print: kable
---

```{r}
#| label: R packages
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(readr)
library(corrplot)
library(GGally)
library(janitor)
```

```{r}
#| label: data loading
#| echo: false

train <- readRDS("train.rds")
test <- readRDS("test.rds")
```

# Data description

Describe the data and use a visualization to support your story. (approx. one or two paragraphs)

```{r}
# Preview the data
glimpse(train)
summary(train)

```


```{r}
#Missing Values
train %>% summarise(across(everything(), ~sum(is.na(.)))) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "missing_count") %>%
  arrange(desc(missing_count))

```

```{r}
ggplot(train, aes(x = score)) +
  geom_histogram(fill = "skyblue", color = "white", bins = 20) +
  theme_minimal() +
  labs(title = "Distribution of Student Scores",
       x = "Score", y = "Count")

# Summary statistics for numerical variables
train %>% 
  select(where(is.numeric)) %>% 
  summary()

```

```{r}

# Compute correlation matrix for numeric variables
num_vars <- train %>% select(where(is.numeric)) %>% select(-score)
cor_mat <- cor(num_vars, use = "pairwise.complete.obs")

corrplot(cor_mat, method = "color", type = "upper", tl.cex = 0.8)

# Correlation of each numeric variable with score
correlations <- train %>%
  select(where(is.numeric)) %>%
  cor(use = "pairwise.complete.obs") %>%
  as.data.frame() %>%
  rownames_to_column("Variable") %>%
  select(Variable, score) %>%
  arrange(desc(abs(score)))

head(correlations, 10)


```
```{r}


# Handle missing values
train_clean <- train %>%
  mutate(across(where(is.numeric), ~ifelse(is.na(.), mean(., na.rm = TRUE), .)))

# Convert categorical variables to factors
train_clean <- train_clean %>%
  mutate(across(where(is.character), as.factor))

glimpse(train_clean)



```
```{r}
#check for outliers with the statistical approach

numeric_data <- train_clean[sapply(train_clean, is.numeric)]
z_scores <- scale(numeric_data)

head(z_scores)

outliers <- abs(z_scores) > 3
head(outliers)

train_cleaned <- train_clean[!apply(outliers, 1, any), ]

# Plot with outliers highlighted
numeric_cols <- sapply(train_clean, is.numeric)
boxplot(train_clean[, numeric_cols],
        main = "Boxplots of Numeric Variables",
        las = 2)

numeric_cols

#KNN regression without the outliers
library(kknn)

model <- train.kknn(
  score ~ .,
  data = train_cleaned,
  kmax = 10
)

pred <- predict(model, newdata =test)

#KNN regression with the outliers

model <- train.kknn(
  score ~ .,
  data = train_clean,
  kmax = 10
)

pred_with_outliers <- predict(model, newdata =test)

#Check the impact of outliers
differences <- pred - pred_with_outliers
summary(differences)
```
The `echo: false` option disables the printing of code (only output is displayed).

# Model description

Briefly describe which models you compare to perform prediction. (approx. two or three paragraphs)

# Data transformation and pre-processing

Describe additional pre-processing steps you have used, if any (e.g., dealing with categorical data, scaling). If you do not do any pre-processing, you can leave this section out.

# Model comparison

Describe how you compare the methods and why. (approx. two or three paragraphs)

# Chosen model

Show which method is best and why. (approx. one paragraph) You are welcome to use tables and plots!

```{r}
#| label: table example
data.frame(
  model       = c("Cool model 1", "Cool model 2"),
  performance = c(1.2, 1.8),
  other       = c(0.5, 0.3),
  notes       = c("Some note", "another note")
)
```

# Team member contributions

Write down what each team member contributed to the project.

- Author One: a, b, c
- Author Two: b, c, d
- Author Three: a, b, d